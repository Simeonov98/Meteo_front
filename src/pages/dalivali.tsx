import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { Dalivali } from "@prisma/client";
import {
  Card,
  Typography,
  Tabs,
  TabsHeader,
  TabsBody,
  Tab,
  TabPanel,
  Button,
} from "@material-tailwind/react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { api } from "~/utils/api";

const TABLE_HEAD = ["Forecast Day", "TMin", "Wdir", "Wspd","TMax","Created At"];

const DaliVali: NextPage = () => {
  const user = useUser();

  const { data: dataCities } = api.cities.getAll.useQuery();

  const dataProviders: string[] = ["DaliVali", "Sinoptik", "Freemeteo"];

  const [city, setCity] = useState<number>();

  const [provider, setProvider] = useState<string>();

  const { data: dataDaliVali } = api.providers.getDaliVali.useQuery({
    cityId: city,
  });
  const { data: datalast10days } = api.providers.getLast10Days.useQuery({
    cityId: city,
  });
  // const { data: dataSinoptik } = api.providers.getDaliVali.useQuery({ cityId: city });
  // const { data: dataFreemeteo } = api.providers.getDaliVali.useQuery({ cityId: city });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="body-font relative w-full rounded-b-lg border-b-2 bg-green-400 px-8 text-gray-700">
        <div className="max-w-7x1 container mx-auto flex flex-col flex-wrap items-center justify-between py-5 md:flex-row">
          <a
            href="/"
            className="relative z-10 flex w-auto select-none items-center text-2xl font-extrabold leading-none text-white"
          >
            MergeMeteo.
          </a>
          <nav className="flex flex-row gap-1">
            <a
              className="border-slate-400 flex rounded-xl border-2 bg-thirdLayer p-3"
              href="#"
            >
              DaliVali
            </a>
            <div className="border-slate-400 flex rounded-xl border-2 bg-thirdLayer p-3">
              {!user.isSignedIn && (
                <div className="flex justify-center">
                  <SignInButton />
                </div>
              )}
              {user.isSignedIn && <SignOutButton />}
            </div>
          </nav>
        </div>
      </section>
      <main className="flex h-screen justify-center p-2">
        <div className="m-4 flex flex-col rounded-lg border-2 border-solid border-red-600 bg-firstLayer ">
          <ul className="flex flex-col flex-wrap justify-around border-gray-200 text-center text-xl font-bold leading-none text-gray-500 dark:border-gray-700 dark:text-gray-400">
            {dataCities?.map((city) => (
              <li className="mr-2">
                <Button
                  key={city.id}
                  onClick={() => setCity(city.id)}
                  aria-current="page"
                  className="active m-6 inline-block rounded-lg bg-secondLayer p-10 text-white dark:bg-gray-800 dark:text-blue-500"
                >
                  {city.name}
                </Button>
              </li>
            ))}
          </ul>
        </div>
        <div className="border-slate-600 m-4 flex flex-col flex-grow rounded-lg border-2 border-solid bg-white">
          <div className="border-slate-600 m-4 flex flex-grow rounded-lg border-2 border-solid bg-secondLayer">
            <Tabs id="custom-animation" value="html" className="flex flex-grow">
              {/* <TabsHeader>
              {dataCities?.map((city) => (
                <Tab
                  key={city.id}
                  value={city.name}
                  onClick={() => setCity(city.id)}
                >
                  {city.name}
                </Tab>
              ))}
            </TabsHeader> */}
              <TabsBody
                animate={{
                  initial: { y: 250 },
                  mount: { y: 0 },
                  unmount: { y: 250 },
                }}
              >
                {city && (
                  <div className="flex flex-grow">
                    <Card className="h-full w-full overflow-hidden">
                      <table className="w-full min-w-max table-auto text-left">
                        <thead>
                          <tr>
                            {TABLE_HEAD.map((head) => (
                              <th
                                key={head}
                                className="border-b border-blue-gray-100 bg-blue-gray-50 p-4"
                              >
                                <Typography
                                  variant="small"
                                  color="blue-gray"
                                  className="font-normal leading-none opacity-70"
                                >
                                  {head}
                                </Typography>
                              </th>
                            ))}
                          </tr>
                        </thead>
                        <tbody>
                          {datalast10days?.map(
                            ({ forecastDay, tmin, wdir, wspd, tmax, createdAt, _avg }, index) => (
                              <tr
                                key={index}
                                className="even:bg-blue-gray-50/50"
                              >
                                <td className="p-4">
                                  <Typography
                                    variant="small"
                                    color="blue-gray"
                                    className="font-normal"
                                  >
                                    {forecastDay.toDateString()}
                                  </Typography>
                                </td>
                                <td className="p-4">
                                  <Typography
                                    variant="small"
                                    color="blue-gray"
                                    className="font-normal"
                                  >
                                    {tmin}
                                  </Typography>
                                </td>
                                <td className="p-4">
                                  <Typography
                                    variant="small"
                                    color="blue-gray"
                                    className="font-normal"
                                  >
                                    {wdir}
                                  </Typography>
                                </td>
                                <td className="p-4">
                                  <Typography
                                    variant="small"
                                    color="blue-gray"
                                    className="font-normal"
                                  >
                                    {wspd}
                                  </Typography>
                                </td>
                                <td className="p-4">
                                  <Typography
                                    variant="small"
                                    color="blue-gray"
                                    className="font-normal"
                                  >
                                    {_avg.tmax}
                                  </Typography>
                                </td>
                                <td className="p-4">
                                  <Typography
                                    variant="small"
                                    color="blue-gray"
                                    className="font-normal"
                                  >
                                    {createdAt.toUTCString()}
                                  </Typography>
                                </td>
                              </tr>
                            )
                          )}
                        </tbody>
                      </table>
                    </Card>
                  </div>
                )}
              </TabsBody>
            </Tabs>
          </div>
          <div className="border-slate-400 m-4 flex flex-grow rounded-lg border-2 border-solid bg-thirdLayer "></div>
        </div>
      </main>
    </>
  );
};

export default DaliVali;
// h-full w-full
